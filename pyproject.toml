[tool.poetry]
name = "audio-transcription-tool"
version = "0.1.0"
description = "A tool for downloading, transcribing, and processing audio files from YouTube."
authors = ["SSD"]
license = "MIT"
readme = "README.md"
packages = [
    { include = "src" }
]

[tool.poetry.dependencies]
python = ">=3.10,<3.13"  # Python version
django = ">=4.0,<6.0"  # Django framework
dependency-injector = ">=4.40,<4.50"  # Dependency injection framework
django-environ = ">=0.4,<0.12"  # Environment variable handling

# API and Real-time
djangorestframework = ">=3.13,<4.0"  # Django REST Framework
channels = ">=3.0,<5.0"  # Django Channels for WebSockets

# Task Queue and Distributed Processing
celery = ">=5.2,<6.0"  # Celery for async task management
dask = ">=2022.5.0,<2025.0.0"  # Dask for distributed processing

# Transcription and NLP Libraries
openai-whisper = { git = "https://github.com/openai/whisper.git" }  # OpenAI Whisper for transcription
whisperx = { git = "https://github.com/m-bain/whisperx.git" }  # WhisperX for transcription with speaker diarization and timestamps
speechbrain = ">=0.5.13,<1.1.0"  # Speech processing library
torch = ">=2.0,<3.0"  # Deep learning support for NLP

# Data Processing and Scientific Libraries
numpy = ">=1.23,<3.0"
pandas = ">=2.0,<3.0"
scipy = ">=1.10,<2.0"

# NLP Tools
nltk = ">=3.8,<4.0"
spacy = ">=3.5,<4.0"
spacy-transformers = ">=1.2,<2.0"  # Transformer integration for NLP

# Audio Processing Utilities
pydub = ">=0.25,<0.30"  # Audio handling
soundfile = ">=0.12,<1.0"  # Read/write audio_processing files

# HTTP and CLI Utilities
requests = ">=2.31,<3.0"  # HTTP client
tqdm = ">=4.65,<5.0"  # Progress bars
tenacity = ">=8.2,<9.0"  # Retry logic
python-dotenv = ">=1.0,<2.0"  # Load .env files
pyyaml = ">=6.0,<7.0"  # YAML configuration
click = ">=8.1,<9.0"  # CLI creation
pybreaker = ">=0.7,<1.5"  # Circuit breaker library

# Logging
structlog = ">=23.0,<25.0"  # Structlog for advanced logging

# Memory Profiling
memory_profiler = ">=0.61,<1.0"  # Memory profiling library

# Date and Time Utilities
pendulum = ">=3.0,<4.0"  # Date and time library

[tool.poetry.dev-dependencies]
pytest = ">=7.0,<9.0"  # Testing framework
pytest-cov = ">=4.0,<7.0"  # Code coverage
black = ">=23.0,<25.0"  # Code formatter
ruff = ">=0.7.4,<1.0"  # Linter and import sorter (replaces flake8)
mypy = ">=1.0,<2.0"  # Type checker
pylint = ">=3.0,<4.0"  # Comprehensive linter
bandit = ">=1.7,<2.0"  # Security analyzer
pre-commit = ">=3.3,<5.0"  # Pre-commit hooks
isort = ">=5.0,<6.0"  # Import sorter

[tool.ruff]
line-length = 88  # Match Black's default
select = [
    "E",    # pycodestyle
    "F",    # Pyflakes
    "UP",   # pyupgrade
    "B",    # flake8-bugbear
    "SIM",  # flake8-simplify
    "I",    # isort
]

ignore = ["E203"]  # Ignore Black-compatible line-break-before-binary-operator rule

exclude = [
    "__pycache__/",
    ".venv/",
    "migrations/",  # Optional: Skip Django migrations
    "*.test.py",    # Optional: Skip test files
]

[tool.poetry.scripts]
app = "app:cli"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
